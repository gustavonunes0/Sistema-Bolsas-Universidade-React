import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import * as S from '../styles/home';
import NavBar from '@/components/Navbar';
import Card from '@/components/Card';
import Modal from '@/components/Modal';
import axios from 'axios';
import router, { useRouter } from 'next/router';

interface Bolsa {
  id: string;
  name: string;
  course: string;
  status: string;
  postId: string;
  details: string;
  startDate: string;
  endDate: string;
}

const Home = () => {
  const [loggedIn, setLoggedIn] = useState(false);
  const router = useRouter();

  useEffect(() => {
    const token = localStorage.getItem('token');

    if (token) {
      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
      setLoggedIn(true);
    } else {
      router.push('/login');
    }
  }, [router]);  

  const [bolsas, setBolsas] = useState<Bolsa[]>([]);
  const [searchText, setSearchText] = useState('');
  const [filtroStatus, setFiltroStatus] = useState('');
  const [filtroNome, setFiltroNome] = useState('');
  const [filtroCurso, setFiltroCurso] = useState('');
  const [selectedPostId, setSelectedPostId] = useState<string | null>(null);
  const [searchClicked, setSearchClicked] = useState(false);

  useEffect(() => {
    const fetchBolsas = async () => {
      const response = await axios.get<Bolsa[]>('http://localhost:5000/processes');
      setBolsas(response.data);
    };

    fetchBolsas();
  }, []);

  const handleCardClick = (postId: string) => {
    setSelectedPostId(postId);
  };

  const handleCloseModal = () => {
    setSelectedPostId(null);
  };

  const selectedPost = selectedPostId ? bolsas.find((bolsa) => bolsa.id === selectedPostId) : null;

  const filteredBolsas = searchClicked ? bolsas
    .filter((bolsa) => {
      if (filtroStatus === '') {
        return true;
      }
      return bolsa.status === filtroStatus;
    })
    .filter((bolsa) => {
      if (filtroNome === '') {
        return true;
      }
      return bolsa.name.toLowerCase().includes(filtroNome.toLowerCase());
    })
    .filter((bolsa) => {
      if (filtroCurso === '') {
        return true;
      }
      return bolsa.course === filtroCurso;
    }) : bolsas;

  const handleSearch = () => {
    setFiltroNome(searchText);
    setSearchClicked(true); // atualiza o estado para indicar que a busca foi clicada
  };

  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setFiltroStatus(event.target.value);
  };

  const handleCourseChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setFiltroCurso(event.target.value);
  };

  return (
    <>
      <Head>
        <title>UNIGU</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar/>
      <S.Main>
        <S.Titulo>
          NOSSAS BOLSAS
        </S.Titulo>
        <S.FiltrosBox>
        <S.DropDown onChange={handleStatusChange}>
          <option value="">Todas</option>
          <option value="Encerrada">Encerrada</option>
          <option value="Em andamento">Em andamento</option>
        </S.DropDown>
        <S.DropDown onChange={handleCourseChange}>
          <option disabled selected hidden>Selecione...</option>
          {Array.from(new Set(bolsas.map((bolsa) => bolsa.course))).map((course) => (
            <option key={course} value={course}>{course}</option>
          ))}
        </S.DropDown>
          <S.TxtBox 
            type='text' 
            placeholder='nome da bolsa' 
            value={searchText}
            onChange={(e) => setSearchText(e.target.value)}
          />
          <S.Botao type="submit" onClick={handleSearch}>Buscar</S.Botao>
        </S.FiltrosBox>
        <S.Container>
        {filteredBolsas.map((bolsa) => (
          <div key={bolsa.id}>
            <Card
              title={bolsa.name}
              course={bolsa.course}
              status={bolsa.status}
              postId={bolsa.postId}
              details={bolsa.details}
              startDate={bolsa.startDate}
              endDate={bolsa.endDate}
              handleCardClick={handleCardClick}
            />
          </div>
        ))}
      </S.Container>
      </S.Main>
    </>
  );  
}

export default Home;
